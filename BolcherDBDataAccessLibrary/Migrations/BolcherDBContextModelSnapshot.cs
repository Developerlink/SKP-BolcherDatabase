// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace BolcherDBDataAccessLibrary.Migrations
{
    [DbContext(typeof(BolcherDBContext))]
    partial class BolcherDBContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:Collation", "SQL_Latin1_General_CP1_CI_AS")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.11")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("BolcherDbModelLibrary.Candy", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("ColorId")
                        .HasColumnType("int");

                    b.Property<int>("FlavourId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<short>("ProductionCost")
                        .HasColumnType("smallint")
                        .HasColumnName("ProductionCost");

                    b.Property<int>("SournessId")
                        .HasColumnType("int");

                    b.Property<int>("StrengthId")
                        .HasColumnType("int");

                    b.Property<short>("Weight")
                        .HasColumnType("smallint");

                    b.HasKey("Id");

                    b.HasIndex("ColorId");

                    b.HasIndex("FlavourId");

                    b.HasIndex("SournessId");

                    b.HasIndex("StrengthId");

                    b.ToTable("Candy");
                });

            modelBuilder.Entity("BolcherDbModelLibrary.Color", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.ToTable("Color");
                });

            modelBuilder.Entity("BolcherDbModelLibrary.Customer", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.ToTable("Customer");
                });

            modelBuilder.Entity("BolcherDbModelLibrary.Flavour", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.ToTable("Flavour");
                });

            modelBuilder.Entity("BolcherDbModelLibrary.OrderLine", b =>
                {
                    b.Property<int>("CandyId")
                        .HasColumnType("int");

                    b.Property<int>("SalesOrderId")
                        .HasColumnType("int");

                    b.Property<short>("Amount")
                        .HasColumnType("smallint");

                    b.HasKey("CandyId", "SalesOrderId");

                    b.HasIndex("SalesOrderId");

                    b.ToTable("OrderLine");
                });

            modelBuilder.Entity("BolcherDbModelLibrary.SalesOrder", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CustomerId")
                        .HasColumnType("int");

                    b.Property<DateTime>("OrderDate")
                        .HasColumnType("datetime");

                    b.HasKey("Id");

                    b.HasIndex("CustomerId");

                    b.ToTable("SalesOrder");
                });

            modelBuilder.Entity("BolcherDbModelLibrary.Sourness", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.ToTable("Sourness");
                });

            modelBuilder.Entity("BolcherDbModelLibrary.Strength", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.ToTable("Strength");
                });

            modelBuilder.Entity("BolcherDbModelLibrary.Candy", b =>
                {
                    b.HasOne("BolcherDbModelLibrary.Color", "Color")
                        .WithMany("Candies")
                        .HasForeignKey("ColorId")
                        .HasConstraintName("FK_Candy_Color")
                        .IsRequired();

                    b.HasOne("BolcherDbModelLibrary.Flavour", "Flavour")
                        .WithMany("Candies")
                        .HasForeignKey("FlavourId")
                        .HasConstraintName("FK_Candy_Flavour")
                        .IsRequired();

                    b.HasOne("BolcherDbModelLibrary.Sourness", "Sourness")
                        .WithMany("Candies")
                        .HasForeignKey("SournessId")
                        .HasConstraintName("FK_Candy_Sourness")
                        .IsRequired();

                    b.HasOne("BolcherDbModelLibrary.Strength", "Strength")
                        .WithMany("Candies")
                        .HasForeignKey("StrengthId")
                        .HasConstraintName("FK_Candy_Strength")
                        .IsRequired();

                    b.Navigation("Color");

                    b.Navigation("Flavour");

                    b.Navigation("Sourness");

                    b.Navigation("Strength");
                });

            modelBuilder.Entity("BolcherDbModelLibrary.OrderLine", b =>
                {
                    b.HasOne("BolcherDbModelLibrary.Candy", "Candy")
                        .WithMany("OrderLines")
                        .HasForeignKey("CandyId")
                        .HasConstraintName("FK_OrderLine_Candy")
                        .IsRequired();

                    b.HasOne("BolcherDbModelLibrary.SalesOrder", "SalesOrder")
                        .WithMany("OrderLines")
                        .HasForeignKey("SalesOrderId")
                        .HasConstraintName("FK_OrderLine_SalesOrder")
                        .IsRequired();

                    b.Navigation("Candy");

                    b.Navigation("SalesOrder");
                });

            modelBuilder.Entity("BolcherDbModelLibrary.SalesOrder", b =>
                {
                    b.HasOne("BolcherDbModelLibrary.Customer", "Customer")
                        .WithMany("SalesOrders")
                        .HasForeignKey("CustomerId")
                        .HasConstraintName("FK_SalesOrder_Customer")
                        .IsRequired();

                    b.Navigation("Customer");
                });

            modelBuilder.Entity("BolcherDbModelLibrary.Candy", b =>
                {
                    b.Navigation("OrderLines");
                });

            modelBuilder.Entity("BolcherDbModelLibrary.Color", b =>
                {
                    b.Navigation("Candies");
                });

            modelBuilder.Entity("BolcherDbModelLibrary.Customer", b =>
                {
                    b.Navigation("SalesOrders");
                });

            modelBuilder.Entity("BolcherDbModelLibrary.Flavour", b =>
                {
                    b.Navigation("Candies");
                });

            modelBuilder.Entity("BolcherDbModelLibrary.SalesOrder", b =>
                {
                    b.Navigation("OrderLines");
                });

            modelBuilder.Entity("BolcherDbModelLibrary.Sourness", b =>
                {
                    b.Navigation("Candies");
                });

            modelBuilder.Entity("BolcherDbModelLibrary.Strength", b =>
                {
                    b.Navigation("Candies");
                });
#pragma warning restore 612, 618
        }
    }
}
